import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { trpc } from "../utils/trpc";
import { EnvelopeIcon, LockClosedIcon, EyeIcon, EyeSlashIcon } from "@heroicons/react/24/solid";
import SocialButton from "../components/SocialButton";
import Link from "next/link";
import { useTheme } from "next-themes";
import { useRouter } from "next/router";
import { signIn, signOut, useSession } from "next-auth/react";
import { Fragment, useState } from "react";
import { Menu, Transition } from "@headlessui/react";
import MenuLink from "../components/MenuLink";

const Home: NextPage = () => {
  const { systemTheme } = useTheme();
  const { data: session, status } = useSession();
  console.log(status);
  if (status === 'authenticated') console.log(session);

  const [showPassword, setShowPassword] = useState(false);
  const [editMode, setEditMode] = useState(false);

  if (status === "loading") {
    return (
      <>
        <Head>
          <title>Authentication App</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/devchallenges.png" />
        </Head>
        <main className="flex flex-col items-center pt-4">Loading...</main>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>Authentication App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/devchallenges.png" />
      </Head>

      {session && session.user ? (
        <div className='container min-h-screen mx-auto flex flex-col items-center p-4'>
          <header className='min-w-full flex flex-col gap-9 z-10'>
            <nav className='flex justify-between items-center'>
              <Link href='/'>
                <a className='flex'>
                  <Image
                    src={systemTheme === 'dark' ? '/devchallenges-light.svg' : '/devchallenges.svg'}
                    alt='devchallenges.io logo'
                    width={132}
                    height={19}
                    objectFit='contain'
                  />
                </a>
              </Link>
              <Menu>
                <Menu.Button className='flex'>
                  <Image
                    className='rounded-lg'
                    src={session.user.image as string}
                    alt='user profile photo'
                    width={40}
                    height={40}
                    objectFit='contain'
                  />
                </Menu.Button>
                <Transition
                  as={Fragment}
                  enter="transition ease-out duration-100"
                  enterFrom="transform opacity-0 scale-95"
                  enterTo="transform opacity-100 scale-100"
                  leave="transition ease-in duration-75"
                  leaveFrom="transform opacity-100 scale-100"
                  leaveTo="transform opacity-0 scale-95"
                >
                  <Menu.Items className='absolute right-0 mt-2 w-56 origin-top-right divide-y divide-[#E0E0E0] rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>
                    <Menu.Item>
                      <MenuLink href='/profile'>
                        Profile
                      </MenuLink>
                    </Menu.Item>
                  </Menu.Items>
                </Transition>
              </Menu>
            </nav>
            <div className='flex flex-col self-center text-center gap-2'>
              <h1 className='text-2xl'>
                Personal info
              </h1>
              <h2 className='text-sm font-light'>
                Basic info, like your name and photo
              </h2>
            </div>
          </header>
          <main className='flex flex-col'>
            <div className='flex justify-between'>
              <h1>Profile</h1>
              <h3>Some info may be visible to other people</h3>
              <button>

              </button>
            </div>
          </main>
        </div>
      ) : (
        <div className="container mx-auto flex flex-col items-center md:justify-center min-h-screen p-4 justify-between">
          <main className='max-w-sm md:max-w-lg border-[#BDBDBD] md:p-14 md:border md:rounded-3xl flex flex-col w-full items-start'>
            <Link href='/'>
              <a className='flex'>
                <Image
                  src={systemTheme === 'dark' ? '/devchallenges-light.svg' : '/devchallenges.svg'}
                  alt='devchallenges.io logo'
                  width={132}
                  height={19}
                  objectFit='contain'
                />
              </a>
            </Link>
            <h1 className='font-semibold text-lg mt-7'>Login</h1>

            <form className='w-full mt-7 placeholder:text-[#828282]'
              onSubmit={(event) => {
                event.preventDefault();
                const target = event.target as HTMLFormElement;
                signIn('credentials', {
                  email: target.email.value,
                  password: target.password.value,
                });
              }}>
              <label className='border border-[#BDBDBD] rounded-lg flex items-center py-3 px-3 gap-3'>
                <EnvelopeIcon className='w-5 h-5 fill-[#828282]' />
                <input className='outline-none grow bg-inherit' type="email" name="registration" id="email" placeholder='Email' />
              </label>

              <label className='border border-[#BDBDBD] rounded-lg flex items-center py-3 px-3 gap-3 mt-4'>
                <LockClosedIcon className='w-5 h-5 fill-[#828282]' />
                <input className='outline-none grow bg-inherit' type={showPassword ? 'text' : 'password'} name="registration" id="password" placeholder='Password' />
                <button type='button' onClick={() => setShowPassword(!showPassword)}>
                  {showPassword ? (
                    <EyeSlashIcon className='w-5 h-5 fill-[#828282]' />
                  ) : (
                    <EyeIcon className='w-5 h-5 fill-[#828282]' />
                  )}
                </button>
              </label>
              <button className='bg-[#2f7bed] hover:bg-[#2b74d2] active:bg-[#1e5296] text-white w-full mt-6 rounded-lg py-2 font-semibold' type="submit">Login</button>
            </form>

            <p className='mt-8 self-center text-sm text-[#828282]'>or continue with these social profiles</p>

            <div className='flex gap-5 mt-6 self-center items-center'>
              {['Google', 'Facebook', 'Twitter', 'Github'].map(provider => (
                <SocialButton
                  key={provider}
                  className='flex hover:bg-gray-200 active:bg-gray-400 rounded-full' provider={provider}
                />
              ))}
              <SocialButton
                className='flex hover:opacity-90 active:opacity-80 rounded-full grayscale' provider='Discord'
              />
            </div>

            <p className='mt-7 self-center text-sm text-[#828282]'>
              Don&apos;t have an account yet? <Link href='/auth/signup'><a className='text-[#2D9CDB]'>Register</a></Link>
            </p>
          </main>

          <footer className='flex justify-between w-full max-w-sm md:max-w-lg md:mt-3'>
            <p className='text-[#BDBDBD] text-sm'>
              created by{' '}
              <a href='https://devchallenges.io/portfolio/oudajosefu' className='text-[#8f8f8f] underline underline-offset-2'>
                oudajosefu
              </a>
            </p>
            <p className='text-[#BDBDBD] text-sm'>devChallenges.io</p>
          </footer>
        </div>
      )}
    </>
  );
};

export default Home;
